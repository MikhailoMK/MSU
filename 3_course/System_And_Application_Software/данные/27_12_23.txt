Значения могут быть дополнены и проверены следующими флажками:

DFCS_ADJUSTRECT - компонента корректирует границы
DFCS_CHECKED - флажок установлен
DFCS_FLAT - кнопка имеет плоские границы
DFCS_INACTIVE - кнопка неактивна
DFCS_MONO - кнопка имеет монохромные границы
DFCS_PUSHED - кнопка нажата

fn DrawText(dc, text, count, var rect, uFormat):Integer - выводит заданное количество (count) символов текста (text) в прямоугольнике (rect)
uFormat
  DT_BOTTOM - прижимает текст вниз
  DT_CALCRECT - вычиляет минимально необходимый для вывода прямоугольник, но не выводит текст
  DT_CENTER - выводит текст горизонтально по центру
  DT_EDITCONROL - дублирует свойства многострочного поля и не выводит частично видимую последнюю строку
  DT_ENDELLIPSIS - заменяет многоточнием начальные символы так, чтобы он полностью уместился в прямоугольнике
  DT_PATHELLIPSIS - заменяет символы в середине текста без изменения начальных и конечных символов так, чтобы текст поместился в прямоугольнике
  DT_EXPANDTABS - заменяет символы табуляции восьмикратной средней шириной символа
  DT_EXTERNALLEADING - учитывает межстрочное расстояние при вычислении высоты строки
  DT_LEFT - прижимает текст влево
  DT_MODIFYSTRING - модифицирует строку при использовании значений (DT_ENDELLIPSIS и DT_PATHELLIPSIS)
  DT_NOCLIP - не отсекает текст границами прямоугольника
  DT_NOPREFIX - отключает обработку управляющих символов
  DT_RIGTH - прижимает текст вправо
  DT_RTLREADING - печатает текст справа налево
  DT_SINGLELINE - выводит текст в виде одной строки, игнорируя символы конца строки
  DT_TABSTOP - устанавливает ширину символа табуляции
  DT_TOP - прижимает текст вверху
  DT_VCENTRE - центрирует текст по вертикали
  DT_WORDBREAK - разрешает разрыв строк на границах строк

fn SetBkMode(dc, BakMode):Integer - утсанавливает способ заполнения фона при выводе текста
BakMode
  Opaque
  Transparent

fn SetBkColor(dc, color):color - устанавливает новый цвет фона
#################################################################################################################################################
procedure TForm1.Button1Click(Sender: TObject);
const
  W = 150;
  H = 50;
  Text = 'Caption';
var
  with Canvas do
  begin
    X := (Width - W) div 2;
    Y := (Height - H) div 2;
    R := Rect(X, Y, X + W, Y + H);
    Rectangle(R.Left, R.Top, R.Right, R.Bottom); //также строку можно записать в виде <<Rectangle(R);>>
    InflateRect(R, -1, -1);
    DrawFrameControl(Handle, R, DFC_BUTTON, DFCS_BUTTONPUSH);
    InflateRect(R, -4, -4);
    DrawFocusRect(R);
    RR := R;
    Font.Name := 'Times New Roman';
    Font.Size := 20;
    Font.Style := [fsBold];
    DrawText(Handle, PChar(Text), Length(Text), R, DT_CALCRECT);
    OffsetRect(R, (RR.Rigth - R.Rigth) div 2 - 1, (RR.Bottom - R.Bottom) div 2 - 1);
    Font.Color := clBtnHighLight;
    DrawText(Handle, PChar(Text), Length(Text), R, 0);
    SetBkMode(Handle, Transparent);
    OffsetRect(R, 2, 2);
    Font.Color := clBtnShadow;
    DrawText(Handle, PChar(Text), Length(Text), R, 0);
    OffsetRect(R, -1, -1);
    Font.Color := clBlack;
    DrawText(Handle, PChar(Text), Length(Text), R, 0);
  end;
end;

end.
#################################################################################################################################################
Создание новых компонент

При создании компоненты необходимо выполнить следующие этапы:
1) Выбор родительского класса. На этом этапе можно содать компоненту несколькими путями:
   А) Изменение существующих компонент;
   Б) Создание новых оконных компонент;
   В) Создание новых графических (неоконных) компонент;
   Г) Создание подклассов для элементов управления Windows;
   Д) Создание невизуальных компонент.
2) Создание модуля для компоненты;
3) Создание свойств, методов и событий;
4) Тестирование и отладка компоненты;
5) Оформление компоненты.

Существует 2 способа создания новых компонент:
1) Выполнить команду File -> New -> Other... -> Component;
2) Выполнить команду Component -> New component.

После выполнения одной из перечисленных команд появляется окно создания новой компоненты. В нём необходимо выполнить следующие действия:
1) В поле <Ancestor type> выбрать родительский класс;
2) В поле <Class Name> добавить имя класса новой компоненты. 
При написании имени класса рекомендуется соблюдать стандарт переименования класса для компонент (Сначала писать T);
3) В поле <Pallete> page из списка необходимо выбрать название группы, в которой появлятеся создаваемая компонента;
4) В поле <Unit file name> выбрать файл-источник компоненты;
5) Если необходимо, в поле <Search path> добаить каталог поиска.













