Задача "Поиск клада"

Вы находитесь в лабиринте, ваша задача - найти клад, который 
также находится где-то в лабиринте.

Карта лабиринта задается квадратной матрицей NxM, в каждой клетке
находится:
0 - пустая клетка
1 - стенка
2 - клад.

Карта лабиринта вам не известна. В каждый момент времени вам могут
быть известны лишь координаты клетки, где вы находитесь и информация
о том, что находится в соседних клетках.

Для написания программы используйте модуль map (т.е., во-первых,
скопируйте файл map.tpu в рабочий каталог, во-вторых, в начале
своей программы напишите uses map;)

Модуль map берет информацию о карте из файла map.txt (ваша программа
не должна что-либо считывать из этого файла).

Вам доступна процедура WhereAmI, в качестве параметров которой
нужно передать 6 переменных типа byte. Например:
WhereAmI (x,y,u,r,d,l). При этом эти переменные не могут быть никакого
другого типа кроме byte. В результате выполнения этой процедуры
в переменные будет записана следующая информация:
x,y - ваши текущие координаты
u,r,d,l - в каждой из переменных будет одно из чисел 0,1,2 в зависимости
от того, что находится сверху, справа, снизу и слева соответственно от той
клетки, где вы находитесь.

Система координат устроена таким образом, что верхняя левая клетка
лабиринта имеет координаты (1,1), верхняя правая - (M,1),
нижняя правая - (M,N), нижняя левая - (1,N).

Для перемещения вы должны вызвать функцию Move, в качестве параметра которой
указать, в какую сторону вы делаете ход. Это можно сделать как с помощью
описанных в модуле констант, так и с помощью чисел:
Up = 1 - перемещение вверх (y-1)
Right = 2 - перемещение вправо (x+1)
Down = 3 - перемещение вниз (y+1)
Left = 4 - перемещение влево (x-1)

Пример: Move(Up)

Результатом функции является число 0, если перемещение прошло успешно,
или 1 - если там оказалась стенка.

Для корректной работы модуля в текущем каталоге должен находиться файл
с картой map.txt

Первое число в файле - задает, нужно ли показывать
на экране процесс поиска клада и с какой скоростью (0 - процесс не 
отображается, положительное число - отображается,
чем больше число - тем медленнее)
Далее идут два числа N и M, задающие размеры карты - каждое из
них не должно превышать 30.
Далее идет N строк по M чисел в каждой, задающие карту.
Последние два числа задают начальные координаты искателя.

Пример файла map.txt:
1
5 6
1 0 1 0 0 0
0 0 0 0 1 0
0 1 0 0 0 1
0 1 0 1 0 0
0 1 0 1 1 2
1 5
